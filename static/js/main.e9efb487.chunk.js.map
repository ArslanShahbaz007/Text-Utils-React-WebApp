{"version":3,"sources":["components/Navbar.js","components/Textarea.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","role","onClick","togglemode","htmlFor","Textarea","data","setdata","useState","Fragment","style","color","placeholder","onChange","event","target","value","rows","newdata","toUpperCase","showAlert","toLowerCase","inputString","wordsArray","trim","split","filter","word","length","countwords","Alert","alert","class","msg","App","setalert","setMode","message","setTimeout","AboutText","toggleMode","document","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e9efb487.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import {\r\n//   Link,\r\n// } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"/navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedCx  ontent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <a className=\"nav-link\" href=\"/about\">\r\n                {props.AboutText}\r\n              </a> */}\r\n            </li>\r\n          </ul>\r\n          <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\" onClick={props.togglemode}/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">DarkMode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = { title: PropTypes.string, AboutText: PropTypes.string };\r\n","import React, { useState } from 'react'\r\n\r\nexport default function Textarea(props) {\r\n    const [data, setdata] = useState('');\r\n    function handleTextareaChange(event){\r\n        setdata(event.target.value);\r\n    }\r\n    function converttouppercase(){\r\n        let newdata=data.toUpperCase();\r\n        setdata(newdata);\r\n        props.showAlert('Converted To Upper Case!');\r\n    }\r\n    function converttolowercase(){\r\n      let newdata=data.toLowerCase();\r\n      setdata(newdata);\r\n      props.showAlert('Converted To Lower Case!');\r\n  }\r\n  function cleartext(){\r\n    \r\n    setdata('');\r\n    props.showAlert('Text Cleared!');\r\n}\r\n  function countwords(inputString){\r\n    // Remove leading and trailing whitespaces\r\n    inputString = inputString.trim();\r\n\r\n    // Split the string into an array of words\r\n    var wordsArray = inputString.split(/\\s+/);\r\n\r\n    // Filter out empty strings\r\n    wordsArray = wordsArray.filter(function(word) {\r\n        return word.length > 0;\r\n    });\r\n\r\n    // Return the total number of words\r\n    return wordsArray.length;\r\n}\r\n  return (\r\n    <>\r\n    <div>\r\n    <h1 className=\"mb-5\" style={{color: props.mode==='dark'?'white':'black'}}>Enter The Text To Analyze Below</h1>\r\n  <div className=\"mb-3\">\r\n    <textarea htmlFor= \"mytextarea\" placeholder='Enter Text here' onChange={handleTextareaChange} className=\"form-control\" value={data} id=\"exampleFormControlTextarea1\" rows=\"8\"> </textarea>\r\n  </div>\r\n  <button className=\"btn btn-primary\"  onClick={converttouppercase}>Convert To Uppercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={converttolowercase}>Convert To Lowercase</button>\r\n  <button className=\"btn btn-primary mx-2\" onClick={cleartext}>Clear Text</button>\r\n  \r\n    </div>\r\n    <div>\r\n      <h2 className='my-3' style={{color: props.mode==='dark'?'white':'black'}}>Text Summary</h2>\r\n      <p style={{color: props.mode==='dark'?'white':'black'}}>{countwords(data)} words and {data.length} characters</p>\r\n      <p></p>\r\n    </div>\r\n    <div>\r\n      <h2 style={{color: props.mode==='dark'?'white':'black'}}>Preview</h2>\r\n      <p style={{color: props.mode==='dark'?'white':'black'}}>{data.length>0?data:\"Enter text to preview here\"}</p>\r\n    </div>\r\n    \r\n  </>\r\n  )\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    props.alert && <div class=\"alert alert-success\" role=\"alert\">\r\n      <strong>{props.alert.msg}</strong>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Textarea from \"./components/Textarea\";\n// import About from \"./components/About\";\nimport Alert from \"./components/Alert\";\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route,\n// } from \"react-router-dom\";\n\nfunction App() {\n  const [alert, setalert] = useState(null);\n  const [mode, setMode] = useState(\"light\");\n  const showAlert = (message) => {\n    setalert({\n      msg: message,\n    });\n    setTimeout(() => {\n      setalert(null);\n    }, 1000);\n  };\n  const toggleMode = () => {\n    if (mode === \"dark\") {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\");\n    } else {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"black\";\n      showAlert(\"Dark Mode Enabled\");\n    }\n  };\n  return (\n    <>\n    {/* <Router> */}\n      <Navbar\n        title=\"TextUtils\"\n        AboutText=\"About\"\n        mode={mode}\n        togglemode={toggleMode}\n        />\n      <Alert alert={alert} />\n      <div className=\"container my-5\">\n      {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About/> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n        <Textarea mode={mode} showAlert={showAlert} />\n          {/* </Route> */}\n        {/* </Switch>  */}\n      </div>\n      {/* </Router>  */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}